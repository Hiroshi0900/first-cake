<?php
namespace App\Controller;

use App\Controller\AppController;

/**
 * Categories Controller
 *
 * @property \App\Model\Table\CategoriesTable $Categories
 *
 * @method \App\Model\Entity\TKeisan[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class CategoriesController extends AppController
{
    public $components = [
        'TKeisan',
        'User'
    ];
    protected $_template = '/category/edit';
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null
     */
    public function index()
    {
        // $Categories = $this->paginate($this->Categories);
        // $Categories2 = $this->paginate($this->Categories);
        $Categories = $this->TKeisan->getTkeisan();
        $Categories = $this->paginate($Categories);
        $this->set(compact('Categories'));
    }

    /**
     * View method
     *
     * @param string|null $id T Keisan id.
     * @return \Cake\Http\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $tKeisan = $this->TKeisan->getTkeisanDetail($id);
        $this->set('tKeisan', $tKeisan);
    }

    /**
     * Add method
     *
     * @return \Cake\Http\Response|null Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        // -------- データ取得 -------- //
        $tKeisan = $this->Categories->newEntity();
        // ユーザーデータ取得 // TODO あとで対応する
        $users = $this->User->getAllUser();
        if ($this->request->is('post')) {
            $tKeisan = $this->Categories->patchEntity($tKeisan, $this->request->getData());
            if ($this->Categories->save($tKeisan)) {
                $this->Flash->success(__('The t keisan has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('登録が正常に完了しませんでした。'));
        }
        // -------- データセット -------- //
        $this->set(compact('tKeisan'));
        $this->set(compact('users'));
    }

    /**
     * Edit method
     *
     * @param string|null $id T Keisan id.
     * @return \Cake\Http\Response|null Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function edit($id = null)
    {
        // 計算データ
        $tKeisan = $this->Categories->get($id, [
            'contain' => [],
        ]);
        // // ユーザーデータ取得 // TODO あとで対応する
        // $users = $this->User->getAllUser();
        // if ($this->request->is(['patch', 'post', 'put'])) {
        //     $tKeisan = $this->Categories->patchEntity($tKeisan, $this->request->getData());
        //     if ($this->Categories->save($tKeisan)) {
        //         $this->Flash->success(__('登録完了です。'));

        //         return $this->redirect(['action' => 'index']);
        //     }
        //     $this->Flash->error(__('The t keisan could not be saved. Please, try again.'));
        // }
        $this->set(compact('tKeisan'));
echo'<pre>';
var_dump($id);
exit;
        if($id){
            // $this->render('/Categories/edit/'.$id);
        }else {
            $this->render('/Categories/edit');
        }
        // // ユーザーデータ追加
        // $this->set(compact('users'));
    }

    /**
     * Delete method
     *
     * @param string|null $id T Keisan id.
     * @return \Cake\Http\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $tKeisan = $this->Categories->get($id);
        if ($this->Categories->delete($tKeisan)) {
            $this->Flash->success(__('The t keisan has been deleted.'));
        } else {
            $this->Flash->error(__('The t keisan could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
}
